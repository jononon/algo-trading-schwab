service: algotrading

frameworkVersion: '4'

provider:
  name: aws
  runtime: python3.9
  region: us-west-1
  stackTags:
    project: "algo-trading"
  environment:
    PORTFOLIO_TABLE_NAME: algotrading-portfolios
    API_URL: !GetAtt HttpApi.ApiEndpoint
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ssm:PutParameter"
        - "ssm:GetParameter"
      Resource: "arn:aws:ssm:*:*:parameter/algotrading/*"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:Scan"
      Resource: "arn:aws:dynamodb:*:*:table/${self:provider.environment.PORTFOLIO_TABLE_NAME}"
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource: "arn:aws:sns:*:*:algotrading-*"

functions:
  run:
    handler: main.request_handler
    timeout: 900 # 15 minutes
    maximumRetryAttempts: 0
    events:
      - schedule:
          method: scheduler
          rate:
            - cron(30 9 ? * MON-FRI *)
          timezone: America/New_York
  cancel-orders:
    handler: main.cancel_orders
    timeout: 900 # 15 minutes
    maximumRetryAttempts: 0
    events:
      - schedule:
          method: scheduler
          rate:
            - cron(15 9 ? * MON-FRI *)
          timezone: America/New_York
  auth:
    handler: auth.auth_handler
    events:
      - httpApi:
          path: /auth
          method: get
  callback:
    handler: auth.callback_handler
    events:
      - httpApi:
          path: /callback
          method: get

resources:
  Resources:
    PortfolioTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.PORTFOLIO_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: "accountHash"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "accountHash"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST

custom:
  alerts:
    topics:
      alarm:
        topic: algotrading-${self:provider.region}-lambda-errors
        notifications:
          - protocol: email
            endpoint: algotradingrunneralerts@jonathandamico.me # Replace with your email address
    definitions:
      lambdaFunctionErrors:
        description: 'Lambda function errors'
        namespace: 'AWS/Lambda'
        metric: Errors
        threshold: 1
        statistic: Sum
        period: 60 # 60 seconds
        evaluationPeriods: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
    alarms:
      - lambdaFunctionErrors

plugins:
  - serverless-python-requirements
  - serverless-plugin-aws-alerts
  - serverless-plugin-resource-tagging